plugins {
    id 'multiloader-common'
    id "me.modmuss50.mod-publish-plugin"
}

configurations {
    commonJava{
        canBeResolved = true
    }
    commonResources{
        canBeResolved = true
    }
}

dependencies {
    compileOnly(project(':common')) {
        capabilities {
            requireCapability "$group:$mod_id"
        }
    }
    commonJava project(path: ':common', configuration: 'commonJava')
    commonResources project(path: ':common', configuration: 'commonResources')
}

tasks.named('compileJava', JavaCompile) {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}

processResources {
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}

/*tasks.named('javadoc', Javadoc).configure {
    dependsOn(configurations.commonJava)
    source(configurations.commonJava)
}*/

tasks.named('sourcesJar', Jar) {
    dependsOn(configurations.commonJava)
    from(configurations.commonJava)
    dependsOn(configurations.commonResources)
    from(configurations.commonResources)
}

def mainArtifact = name == "fabric" ? remapJar.archivePath : jar.archivePath
def mainDisplayName = "${archivesBaseName}-${version}"
println(displayName)

publishMods {
    var changelog_file = new File(rootProject.uri("changelog.md"))
    changelog = changelog_file.exists() ?  changelog_file.text : ""
    type = STABLE
    file = mainArtifact
    displayName = mainDisplayName
    modLoaders.add(name)

    // CurseForge
    curseforge {
        accessToken = providers.gradleProperty("CF_TOKEN")
        projectId = "1241114"
        minecraftVersions.add("1.21")
        minecraftVersions.add("1.21.1")
        if (project.name == "fabric"){
            requires {
                slug = "cloth-config"
            }
        }
    }

    // Modrinth
    modrinth {
        accessToken = providers.gradleProperty("MODRINTH_TOKEN")
        projectId = "WLBCMaNq"
        minecraftVersions.add("1.21")
        minecraftVersions.add("1.21.1")
        if (project.name == "fabric"){
            requires {
                slug = "fabric-api"
            }
            requires {
                slug = "cloth-config"
            }
        }
    }
}

tasks.getByName("publishModrinth").dependsOn name == "fabric" ? remapJar : jar
tasks.getByName("publishCurseforge").dependsOn name == "fabric" ? remapJar : jar
